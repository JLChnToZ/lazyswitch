{
    "en": {
        "JLChnToZ.VRC.LazySwitch.multiedit": "Unable to display values because they are different across multiple objects.\nAttempt to add, reorder or change the values will cause all selected switches to have the same value.",
        "JLChnToZ.VRC.LazySwitch.isSynced": "Is Synced",
        "JLChnToZ.VRC.LazySwitch.isSynced:tooltip": "Will this switch synchronized across the network.",
        "JLChnToZ.VRC.LazySwitch.isRandomized": "Is Randomized",
        "JLChnToZ.VRC.LazySwitch.isRandomized:tooltip": "Randomize the state when interacted.",
        "JLChnToZ.VRC.LazySwitch.masterSwitch": "Master Switch",
        "JLChnToZ.VRC.LazySwitch.masterSwitch:tooltip": "Link this switch to other switch, both switches will synchronize their state.",
        "JLChnToZ.VRC.LazySwitch.masterSwitch:info": "This switch will be synchronized with the master switch.",
        "JLChnToZ.VRC.LazySwitch.fixupMode": "Fixup Mode",
        "JLChnToZ.VRC.FixupMode.AsIs": "Keep As-Is",
        "JLChnToZ.VRC.FixupMode.AsIs:info": "The initial active state of target objects will be used as-is.\nThe toggle state here will be in sync with the target object active state.",
        "JLChnToZ.VRC.FixupMode.OnBuild": "Update on World Build",
        "JLChnToZ.VRC.FixupMode.OnBuild:info": "The actual object active state will be updated to match the default state here on world build.\nBeware this may break UDON scripts which require to be enabled at start but you set it to off as default here.",
        "JLChnToZ.VRC.FixupMode.OnEnable": "Update on Switch Enable",
        "JLChnToZ.VRC.FixupMode.OnEnable:info": "The actual object active state will be updated to match the default state here when the switch is enabled on runtime.\nBeware this may break UDON scripts when you enable the target object in edit mode but also setting it to off as default here.",
        "JLChnToZ.VRC.LazySwitch.persistenceKey": "Persistence Key",
        "JLChnToZ.VRC.LazySwitch.persistenceKey:tooltip": "The optional key to save the state of this switch with player persistence.",
        "JLChnToZ.VRC.LazySwitch.separatePersistencePerPlatform": "Separate Save Per Platform",
        "JLChnToZ.VRC.LazySwitch.separatePersistencePerPlatform:tooltip": "Append platform suffix to the persistence key to have separate saved states per platform (_Android/_iOS).",
        "JLChnToZ.VRC.LazySwitch.separatePersistenceForVR": "Separate Save For VR",
        "JLChnToZ.VRC.LazySwitch.separatePersistenceForVR:tooltip": "Append VR suffix to the persistence key to have separate saved states for VR.",
        "JLChnToZ.VRC.LazySwitch.persistence:info": "Persistence data will only get restored from the first joined player when used in synced mode.",
        "JLChnToZ.VRC.LazySwitch.state:title": "States and Target Objects",
        "JLChnToZ.VRC.LazySwitch.state:title_playing": "Target Objects",
        "JLChnToZ.VRC.LazySwitch.state": "State {0}",
        "JLChnToZ.VRC.LazySwitch.state:empty": "Click `+` button or drop objects here.",
        "JLChnToZ.VRC.LazySwitch.addGameObjects": "Add Selected Game Objects",
        "JLChnToZ.VRC.LazySwitch.addGameObject": "Add Game Object",
        "JLChnToZ.VRC.LazySwitch.addSeparator": "Add State Separator",
        "JLChnToZ.VRC.PlayerEnterDetector.playerEnterState": "Player Enter State",
        "JLChnToZ.VRC.PlayerEnterDetector.playerEnterState:tooltip": "The state to set when player enter.",
        "JLChnToZ.VRC.PlayerEnterDetector.playerExitState": "Player Exit State",
        "JLChnToZ.VRC.PlayerEnterDetector.playerExitState:tooltip": "The state to set when player exit.",
        "JLChnToZ.VRC.PlayerEnterDetector.detectAllPlayers": "Detect All Players",
        "JLChnToZ.VRC.PlayerEnterDetector.detectAllPlayers:tooltip": "Detect all players in the world.\nWhen enabled, state changes only when the first player enter or the last player exit.",
        "JLChnToZ.VRC.PlayerEnterDetector.anyOwnedObjects": "Any Owned Objects",
        "JLChnToZ.VRC.PlayerEnterDetector.anyOwnedObjects:tooltip": "(Experimental) Only trigger enter when current player owns any children of the game objects defined in the lazy switch, or the entering player is the local player.\nRequire to enable 'Detect All Players'."
    },
    "zh-hant": {
        "JLChnToZ.VRC.LazySwitch.multiedit": "無法顯示值，因為它們在多個物件中不同。\n嘗試添加、重新排序或更改值將導致所有選定的開關具有相同的值。",
        "JLChnToZ.VRC.LazySwitch.isSynced": "是否同步",
        "JLChnToZ.VRC.LazySwitch.isSynced:tooltip": "此開關是否在網絡上同步。",
        "JLChnToZ.VRC.LazySwitch.isRandomized": "是否隨機化",
        "JLChnToZ.VRC.LazySwitch.isRandomized:tooltip": "互動時隨機化狀態。",
        "JLChnToZ.VRC.LazySwitch.masterSwitch": "主開關",
        "JLChnToZ.VRC.LazySwitch.masterSwitch:tooltip": "將此開關鏈接到其他開關，兩個開關將同步其狀態。",
        "JLChnToZ.VRC.LazySwitch.masterSwitch:info": "此開關將與主開關同步。",
        "JLChnToZ.VRC.LazySwitch.fixupMode": "修正模式",
        "JLChnToZ.VRC.FixupMode.AsIs": "保持原樣",
        "JLChnToZ.VRC.FixupMode.AsIs:info": "目標物件的初始活動狀態將按原樣使用。\n此處的切換狀態將與目標物件的活動狀態同步。",
        "JLChnToZ.VRC.FixupMode.OnBuild": "在世界構建時更新",
        "JLChnToZ.VRC.FixupMode.OnBuild:info": "實際物件的活動狀態將在世界構建時更新以匹配此處的預設狀態。\n請注意，這可能會破壞需要在開始時啟用但您在此處設置為預設關閉的 UDON 腳本。",
        "JLChnToZ.VRC.FixupMode.OnEnable": "在開關啟用時更新",
        "JLChnToZ.VRC.FixupMode.OnEnable:info": "實際物件的活動狀態將在運行時開關啟用時更新以匹配此處的預設狀態。\n請注意，這可能會破壞 UDON 腳本，當您在編輯模式下啟用目標物件但也在此處將其設置為預設關閉時。",
        "JLChnToZ.VRC.LazySwitch.persistenceKey": "持久性鍵",
        "JLChnToZ.VRC.LazySwitch.persistenceKey:tooltip": "用於保存此開關狀態的可選鍵。",
        "JLChnToZ.VRC.LazySwitch.separatePersistencePerPlatform": "按平台分開保存",
        "JLChnToZ.VRC.LazySwitch.separatePersistencePerPlatform:tooltip": "將平台後綴附加到持久性鍵，以便每個平台（_Android/_iOS）具有單獨的保存狀態。",
        "JLChnToZ.VRC.LazySwitch.separatePersistenceForVR": "為 VR 模式分開保存",
        "JLChnToZ.VRC.LazySwitch.separatePersistenceForVR:tooltip": "將 VR 後綴附加到持久性鍵，以便為 VR 模式具有單獨的保存狀態。",
        "JLChnToZ.VRC.LazySwitch.persistence:info": "使用同步模式時，持久性數據僅會從第一個加入的玩家恢復。",
        "JLChnToZ.VRC.LazySwitch.state:title": "狀態和目標物件",
        "JLChnToZ.VRC.LazySwitch.state:title_playing": "目標物件",
        "JLChnToZ.VRC.LazySwitch.state": "狀態 {0}",
        "JLChnToZ.VRC.LazySwitch.state:empty": "點擊 `+` 按鈕或將物件拖放到這裡。",
        "JLChnToZ.VRC.LazySwitch.addGameObjects": "添加選定的遊戲物件",
        "JLChnToZ.VRC.LazySwitch.addGameObject": "添加遊戲物件",
        "JLChnToZ.VRC.LazySwitch.addSeparator": "添加狀態分隔",
        "JLChnToZ.VRC.PlayerEnterDetector.playerEnterState": "玩家進入狀態",
        "JLChnToZ.VRC.PlayerEnterDetector.playerEnterState:tooltip": "玩家進入時要設置的狀態。",
        "JLChnToZ.VRC.PlayerEnterDetector.playerExitState": "玩家退出狀態",
        "JLChnToZ.VRC.PlayerEnterDetector.playerExitState:tooltip": "玩家退出時要設置的狀態。",
        "JLChnToZ.VRC.PlayerEnterDetector.detectAllPlayers": "檢測所有玩家",
        "JLChnToZ.VRC.PlayerEnterDetector.detectAllPlayers:tooltip": "檢測世界中的所有玩家。\n啟用時，狀態僅在第一個玩家進入或最後一個玩家退出時更改。",
        "JLChnToZ.VRC.PlayerEnterDetector.anyOwnedObjects": "任何擁有的物件",
        "JLChnToZ.VRC.PlayerEnterDetector.anyOwnedObjects:tooltip": "(實驗性) 只有當當前玩家擁有懶開關中定義的遊戲物件的任何子物件，或進入的玩家是本地玩家時，才觸發進入。\n需要啟用“檢測所有玩家”。"
    },
    "zh-hans": {
        "JLChnToZ.VRC.LazySwitch.multiedit": "无法显示值，因为它们在多个对象中不同。\n尝试添加、重新排序或更改值将导致所有选定的开关具有相同的值。",
        "JLChnToZ.VRC.LazySwitch.isSynced": "是否同步",
        "JLChnToZ.VRC.LazySwitch.isSynced:tooltip": "此开关是否在网络上同步。",
        "JLChnToZ.VRC.LazySwitch.isRandomized": "是否随机化",
        "JLChnToZ.VRC.LazySwitch.isRandomized:tooltip": "互动时随机化状态。",
        "JLChnToZ.VRC.LazySwitch.masterSwitch": "主开关",
        "JLChnToZ.VRC.LazySwitch.masterSwitch:tooltip": "将此开关链接到其他开关，两个开关将同步其状态。",
        "JLChnToZ.VRC.LazySwitch.masterSwitch:info": "此开关将与主开关同步。",
        "JLChnToZ.VRC.LazySwitch.fixupMode": "修正模式",
        "JLChnToZ.VRC.FixupMode.AsIs": "保持原样",
        "JLChnToZ.VRC.FixupMode.AsIs:info": "目标对象的初始活动状态将按原样使用。\n此处的切换状态将与目标对象的活动状态同步。",
        "JLChnToZ.VRC.FixupMode.OnBuild": "在世界构建时更新",
        "JLChnToZ.VRC.FixupMode.OnBuild:info": "实际对象的活动状态将在世界构建时更新以匹配此处的默认状态。\n请注意，这可能会破坏需要在开始时启用但您在此处设置为默认关闭的 UDON 脚本。",
        "JLChnToZ.VRC.FixupMode.OnEnable": "在开关启用时更新",
        "JLChnToZ.VRC.FixupMode.OnEnable:info": "实际对象的活动状态将在运行时开关启用时更新以匹配此处的默认状态。\n请注意，这可能会破坏 UDON 脚本，当您在编辑模式下启用目标对象但也在此处将其设置为默认关闭时。",
        "JLChnToZ.VRC.LazySwitch.persistenceKey": "持久性键",
        "JLChnToZ.VRC.LazySwitch.persistenceKey:tooltip": "用于保存此开关状态的可选键。",
        "JLChnToZ.VRC.LazySwitch.separatePersistencePerPlatform": "按平台分开保存",
        "JLChnToZ.VRC.LazySwitch.separatePersistencePerPlatform:tooltip": "将平台后缀附加到持久性键，以便每个平台（_Android/_iOS）具有单独的保存状态。",
        "JLChnToZ.VRC.LazySwitch.separatePersistenceForVR": "为 VR 模式分开保存",
        "JLChnToZ.VRC.LazySwitch.separatePersistenceForVR:tooltip": "将 VR 后缀附加到持久性键，以便为 VR 模式具有单独的保存状态。",
        "JLChnToZ.VRC.LazySwitch.persistence:info": "使用同步模式时，持久性数据仅会从第一个加入的玩家恢复。",
        "JLChnToZ.VRC.LazySwitch.state:title": "状态和目标对象",
        "JLChnToZ.VRC.LazySwitch.state:title_playing": "目标对象",
        "JLChnToZ.VRC.LazySwitch.state": "状态 {0}",
        "JLChnToZ.VRC.LazySwitch.state:empty": "点击 `+` 按钮或将对象拖放到这里。",
        "JLChnToZ.VRC.LazySwitch.addGameObjects": "添加选定的游戏对象",
        "JLChnToZ.VRC.LazySwitch.addGameObject": "添加游戏对象",
        "JLChnToZ.VRC.LazySwitch.addSeparator": "添加状态分隔",
        "JLChnToZ.VRC.PlayerEnterDetector.playerEnterState": "玩家进入状态",
        "JLChnToZ.VRC.PlayerEnterDetector.playerEnterState:tooltip": "玩家进入时要设置的状态。",
        "JLChnToZ.VRC.PlayerEnterDetector.playerExitState": "玩家退出状态",
        "JLChnToZ.VRC.PlayerEnterDetector.playerExitState:tooltip": "玩家退出时要设置的状态。",
        "JLChnToZ.VRC.PlayerEnterDetector.detectAllPlayers": "检测所有玩家",
        "JLChnToZ.VRC.PlayerEnterDetector.detectAllPlayers:tooltip": "检测世界中的所有玩家。\n启用时，状态仅在第一个玩家进入或最后一个玩家退出时更改。",
        "JLChnToZ.VRC.PlayerEnterDetector.anyOwnedObjects": "任何拥有的对象",
        "JLChnToZ.VRC.PlayerEnterDetector.anyOwnedObjects:tooltip": "(实验性) 只有当当前玩家拥有懒开关中定义的游戏对象的任何子对象，或进入的玩家是本地玩家时，才触发进入。\n需要启用“检测所有玩家”。"
    },
    "ja": {
        "JLChnToZ.VRC.LazySwitch.multiedit": "複数のオブジェクトで値が異なるため、値を表示できません。\n値を追加、並べ替え、または変更しようとすると、選択したすべてのスイッチが同じ値になります。",
        "JLChnToZ.VRC.LazySwitch.isSynced": "同期されているか",
        "JLChnToZ.VRC.LazySwitch.isSynced:tooltip": "このスイッチはネットワーク上で同期されますか。",
        "JLChnToZ.VRC.LazySwitch.isRandomized": "ランダム化されているか",
        "JLChnToZ.VRC.LazySwitch.isRandomized:tooltip": "操作時に状態をランダム化します。",
        "JLChnToZ.VRC.LazySwitch.masterSwitch": "マスター スイッチ",
        "JLChnToZ.VRC.LazySwitch.masterSwitch:tooltip": "このスイッチを他のスイッチにリンクし、両方のスイッチが状態を同期します。",
        "JLChnToZ.VRC.LazySwitch.masterSwitch:info": "このスイッチはマスター スイッチと同期されます。",
        "JLChnToZ.VRC.LazySwitch.fixupMode": "修正モード",
        "JLChnToZ.VRC.FixupMode.AsIs": "そのまま保持",
        "JLChnToZ.VRC.FixupMode.AsIs:info": "ターゲットオブジェクトの初期アクティブ状態はそのまま使用されます。\nここでのトグル状態はターゲットオブジェクトのアクティブ状態と同期されます。",
        "JLChnToZ.VRC.FixupMode.OnBuild": "ワールドビルド時に更新",
        "JLChnToZ.VRC.FixupMode.OnBuild:info": "ワールドビルド時に実際のオブジェクトのアクティブ状態がここでのデフォルト状態に合わせて更新されます。\nこれは、開始時に有効である必要があるUDONスクリプトを破壊す可能性があることに注意してくださいが、ここではデフォルトでオフに設定されています。",
        "JLChnToZ.VRC.FixupMode.OnEnable": "スイッチ有効時に更新",
        "JLChnToZ.VRC.FixupMode.OnEnable:info": "スイッチがランタイムで有効になったときに、実際のオブジェクトのアクティブ状態がここでのデフォルト状態に合わせて更新されます。\nこれは、ターゲットオブジェクトを編集モードで有効にしても、ここではデフォルトでオフに設定されている UDON スクリプトを破壊する可能性があることに注意してください。",
        "JLChnToZ.VRC.LazySwitch.persistenceKey": "永続キー",
        "JLChnToZ.VRC.LazySwitch.persistenceKey:tooltip": "このスイッチの状態を保存するためのオプションのキーです。",
        "JLChnToZ.VRC.LazySwitch.separatePersistencePerPlatform": "プラットフォームごとに保存を分離",
        "JLChnToZ.VRC.LazySwitch.separatePersistencePerPlatform:tooltip": "プラットフォームのサフィックスを永続キーに追加して、プラットフォームごとに（_Android/_iOS）別々の保存状態を持たせます。",
        "JLChnToZ.VRC.LazySwitch.separatePersistenceForVR": "VR 用に保存を分離",
        "JLChnToZ.VRC.LazySwitch.separatePersistenceForVR:tooltip": "VR のサフィックスを永続キーに追加して、VR 用に別々の保存状態を持たせます。",
        "JLChnToZ.VRC.LazySwitch.persistence:info": "永続データは、同期モードで使用する場合、最初に参加したプレイヤーからのみ復元されます。",
        "JLChnToZ.VRC.LazySwitch.state:title": "状態とターゲットオブジェクト",
        "JLChnToZ.VRC.LazySwitch.state:title_playing": "ターゲットオブジェクト",
        "JLChnToZ.VRC.LazySwitch.state": "状態 {0}",
        "JLChnToZ.VRC.LazySwitch.state:empty": "`+` ボタンをクリックするか、オブジェクトをここにドロップしてください。",
        "JLChnToZ.VRC.LazySwitch.addGameObjects": "選択したゲームオブジェクトを追加",
        "JLChnToZ.VRC.LazySwitch.addGameObject": "ゲームオブジェクトを追加",
        "JLChnToZ.VRC.LazySwitch.addSeparator": "状態セパレーターを追加",
        "JLChnToZ.VRC.PlayerEnterDetector.playerEnterState": "プレイヤー入場状態",
        "JLChnToZ.VRC.PlayerEnterDetector.playerEnterState:tooltip": "プレイヤーが入場したときに設定する状態。",
        "JLChnToZ.VRC.PlayerEnterDetector.playerExitState": "プレイヤー退出状態",
        "JLChnToZ.VRC.PlayerEnterDetector.playerExitState:tooltip": "プレイヤーが退出したときに設定する状態。",
        "JLChnToZ.VRC.PlayerEnterDetector.detectAllPlayers": "すべてのプレイヤーを検出",
        "JLChnToZ.VRC.PlayerEnterDetector.detectAllPlayers:tooltip": "ワールド内のすべてのプレイヤーを検出します。\n有効にすると、状態は最初のプレイヤーが入場したときまたは最後のプレイヤーが退出したときにのみ変更されます。",
        "JLChnToZ.VRC.PlayerEnterDetector.anyOwnedObjects": "所有しているオブジェクトがある場合",
        "JLChnToZ.VRC.PlayerEnterDetector.anyOwnedObjects:tooltip": "(実験的) 現在のプレイヤーがラジースイッチで定義されたゲームオブジェクトの子オブジェクトを所有している場合、または入場するプレイヤーがローカルプレイヤーである場合にのみ、入場をトリガーします。\n「すべてのプレイヤーを検出」を有効にする必要があります。"
    },
    "ko": {
        "JLChnToZ.VRC.LazySwitch.multiedit": "여러 객체에서 값이 다르기 때문에 값을 표시할 수 없습니다.\n값을 추가, 재정렬 또는 변경하려고 하면 선택한 모든 스위치가 동일한 값을 갖게 됩니다.",
        "JLChnToZ.VRC.LazySwitch.isSynced": "동기화됨",
        "JLChnToZ.VRC.LazySwitch.isSynced:tooltip": "이 스위치는 네트워크를 통해 동기화됩니까.",
        "JLChnToZ.VRC.LazySwitch.isRandomized": "무작위화됨",
        "JLChnToZ.VRC.LazySwitch.isRandomized:tooltip": "상호작용 시 상태를 무작위화합니다.",
        "JLChnToZ.VRC.LazySwitch.masterSwitch": "마스터 스위치",
        "JLChnToZ.VRC.LazySwitch.masterSwitch:tooltip": "이 스위치를 다른 스위치에 연결하면 두 스위치가 상태를 동기화합니다.",
        "JLChnToZ.VRC.LazySwitch.masterSwitch:info": "이 스위치는 마스터 스위치와 동기화됩니다.",
        "JLChnToZ.VRC.LazySwitch.fixupMode": "수정 모드",
        "JLChnToZ.VRC.FixupMode.AsIs": "있는 그대로 유지",
        "JLChnToZ.VRC.FixupMode.AsIs:info": "대상 객체의 초기 활성 상태는 있는 그대로 사용됩니다.\n여기서의 토글 상태는 대상 객체의 활성 상태와 동기화됩니다.",
        "JLChnToZ.VRC.FixupMode.OnBuild": "월드 빌드 시 업데이트",
        "JLChnToZ.VRC.FixupMode.OnBuild:info": "월드 빌드 시 실제 객체의 활성 상태가 여기의 기본 상태에 맞게 업데이트됩니다.\n이는 시작 시 활성화되어야 하는 UDON 스크립트를 깨뜨릴 수 있습니다. 그러나 여기서는 기본적으로 비활성으로 설정되어 있습니다.",
        "JLChnToZ.VRC.FixupMode.OnEnable": "스위치 활성화 시 업데이트",
        "JLChnToZ.VRC.FixupMode.OnEnable:info": "스위치가 런타임에서 활성화될 때 실제 객체의 활성 상태가 여기의 기본 상태에 맞게 업데이트됩니다.\n이는 편집 모드에서 대상 객체를 활성화했지만 여기에서는 기본적으로 비활성으로 설정된 UDON 스크립트를 깨뜨릴 수 있습니다.",
        "JLChnToZ.VRC.LazySwitch.persistenceKey": "영속성 키",
        "JLChnToZ.VRC.LazySwitch.persistenceKey:tooltip": "이 스위치의 상태를 저장하는 선택적 키입니다.",
        "JLChnToZ.VRC.LazySwitch.separatePersistencePerPlatform": "플랫폼별로 저장 분리",
        "JLChnToZ.VRC.LazySwitch.separatePersistencePerPlatform:tooltip": "플랫폼 접미사를 영속성 키에 추가하여 플랫폼별(_Android/_iOS)로 별도의 저장 상태를 갖도록 합니다.",
        "JLChnToZ.VRC.LazySwitch.separatePersistenceForVR": "VR용으로 저장 분리",
        "JLChnToZ.VRC.LazySwitch.separatePersistenceForVR:tooltip": "VR 접미사를 영속성 키에 추가하여 VR용으로 별도의 저장 상태를 갖도록 합니다.",
        "JLChnToZ.VRC.LazySwitch.persistence:info": "동기화 모드에서 사용되는 경우 영속성 데이터는 첫 번째로 참여한 플레이어로부터만 복원됩니다.",
        "JLChnToZ.VRC.LazySwitch.state:title": "상태 및 대상 객체",
        "JLChnToZ.VRC.LazySwitch.state:title_playing": "대상 객체",
        "JLChnToZ.VRC.LazySwitch.state": "상태 {0}",
        "JLChnToZ.VRC.LazySwitch.state:empty": "`+` 버튼을 클릭하거나 객체를 여기에 드롭하세요.",
        "JLChnToZ.VRC.LazySwitch.addGameObjects": "선택한 게임 객체 추가",
        "JLChnToZ.VRC.LazySwitch.addGameObject": "게임 객체 추가",
        "JLChnToZ.VRC.LazySwitch.addSeparator": "상태 구분자 추가",
        "JLChnToZ.VRC.PlayerEnterDetector.playerEnterState": "플레이어 입장 상태",
        "JLChnToZ.VRC.PlayerEnterDetector.playerEnterState:tooltip": "플레이어가 입장할 때 설정할 상태입니다.",
        "JLChnToZ.VRC.PlayerEnterDetector.playerExitState": "플레이어 퇴장 상태",
        "JLChnToZ.VRC.PlayerEnterDetector.playerExitState:tooltip": "플레이어가 퇴장할 때 설정할 상태입니다.",
        "JLChnToZ.VRC.PlayerEnterDetector.detectAllPlayers": "모든 플레이어 감지",
        "JLChnToZ.VRC.PlayerEnterDetector.detectAllPlayers:tooltip": "월드 내의 모든 플레이어를 감지합니다.\n활성화하면 상태는 첫 번째 플레이어가 입장하거나 마지막 플레이어가 퇴장할 때만 변경됩니다.",
        "JLChnToZ.VRC.PlayerEnterDetector.anyOwnedObjects": "소유한 객체가 있는 경우",
        "JLChnToZ.VRC.PlayerEnterDetector.anyOwnedObjects:tooltip": "(실험적) 현재 플레이어가 레이지 스위치에서 정의된 게임 객체의 자식 객체를 소유하고 있거나 입장하는 플레이어가 로컬 플레이어인 경우에만 입장을 트리거합니다.\n'모든 플레이어 감지'를 활성화해야 합니다."
    }
}